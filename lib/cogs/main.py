import discord
import asyncio

from os import name
from random import choice
from typing import Optional
from datetime import datetime

from discord import Intents
from discord import Member
from discord import Embed, File
from discord.ext import commands
from discord.ext.commands import command, has_permissions
from discord.ext.commands import Cog, BucketType, Greedy, CheckFailure
from discord.ext.commands import command, cooldown

class Main(Cog):
    def __init__(self, bot):
        self.bot = bot
        
    @command(name="–°–≤—è–∑—å", aliases=["–ë–æ—Ç", "—Å–≤—è–∑—å", "–±–æ—Ç", "ping", "bot", "Bot"], description="–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∏ —Å –±–æ—Ç–æ–º.")
    @cooldown(1, 10, BucketType.user)
    async def ping_test(self, ctx):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∏ —Å –±–æ—Ç–æ–º."""
        
        await ctx.send(f"{choice((':white_check_mark:', '–í—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç!', ':eyes:', '5 –º–∏–Ω—É—Ç, –ø–æ–ª—ë—Ç –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π!', '–Ø –∂–∏–≤!', '–ù–∞ –º–µ—Å—Ç–µ!', '–°–ø–∞—Å–∏–±–æ <@514069435913469962>, —á—Ç–æ —è —Ä–∞–±–æ—Ç–∞—é!'))}")

    @command(name="—Å–∫–∞–∑–∞—Ç—å", aliases=["say", "s",], description="–°–∫–∞–∂–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –æ—Ç –ª–∏—Ü–∞ –±–æ—Ç–∞. (üîí–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ —Ä–æ–ª—å TurboBot1-Access)")
    @commands.has_role("TurboBot1-Access")
    @cooldown(1, 20, BucketType.user)
    async def tts(self, ctx, *, text:str):
        """–°–∫–∞–∂–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –æ—Ç –ª–∏—Ü–∞ –±–æ—Ç–∞. (üîí–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ —Ä–æ–ª—å TurboBot1-Access)"""
        memb = ctx.author.nick
        await ctx.send(f"{text} \n  *–ê–≤—Ç–æ—Ä: {memb}*")
        await ctx.message.delete()

    @command(name="t", aliases=["tell", "—Ç–µ–∫—Å—Ç", "—Å"], description="–°–∫–∞–∂–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –æ—Ç –ª–∏—Ü–∞ –±–æ—Ç–∞. (üîí–î–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É, –±–µ–∑ –∫—É–ª–¥–∞—É–Ω–∞)")
    @commands.is_owner()
    async def ttsowner(self, ctx, *, text:str):
        """–°–∫–∞–∂–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –æ—Ç –ª–∏—Ü–∞ –±–æ—Ç–∞. (üîí–î–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É, –±–µ–∑ –∫—É–ª–¥–∞—É–Ω–∞)"""
        await ctx.send(f"{text}")
        await ctx.message.delete()
     
    @command(name="—É–¥–∞—Ä–∏—Ç—å", aliases=["hit","slap"], description="–£–¥–∞—Ä—å—Ç–µ –∫–æ–≥–æ-–Ω–∏–±—É–¥—å.")
    @cooldown(1, 5, BucketType.user)
    async def slap_member(self, ctx, member:Member, *, words: Optional[str] = ""):
        """–£–¥–∞—Ä—å—Ç–µ –∫–æ–≥–æ-–Ω–∏–±—É–¥—å."""
        if member.id == 514069435913469962:
            await ctx.send("–ù–µ —Ç–∞–∫ –±—ã—Å—Ç—Ä–æ, —ç—Ç–æ –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å!")
        elif member.id == 793943860044103721:
            await ctx.send("–ê –≤–æ—Ç –∏ –Ω–µ—Ç.")
            await asyncio.sleep(2)
            await ctx.send(f":smiling_imp: TurboTemuch1 —É–¥–∞—Ä–∏–ª {ctx.author.mention}!")
        elif member.id == ctx.author.id:
            await ctx.send(":x: –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ.")
        else:
            await ctx.send(f"{ctx.author.mention} —É–¥–∞—Ä–∏–ª {member.mention} —Å–æ —Å–ª–æ–≤–∞–º–∏: {words}")

    @command(name="–ø–æ–¥–≤–∞–ª", aliases=["trap","basement"], description="–ü–æ—Å–∞–¥–∏—Ç–µ –∫–æ–≥–æ-–Ω–∏–±—É–¥—å –≤ –ø–æ–¥–≤–∞–ª.")
    @cooldown(1, 20, BucketType.user)
    async def trap_member(self, ctx, member:Member, *, words: Optional[str] = ""):
        """–ü–æ—Å–∞–¥–∏—Ç–µ –∫–æ–≥–æ-–Ω–∏–±—É–¥—å –≤ –ø–æ–¥–≤–∞–ª."""
        if member.id == 514069435913469962:
            await ctx.send("–ù–µ —Ç–∞–∫ –±—ã—Å—Ç—Ä–æ, —ç—Ç–æ –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å!")
        elif member.id == 793943860044103721:
            await ctx.send("–ê –≤–æ—Ç –∏ –Ω–µ—Ç.")
            await asyncio.sleep(2)
            await ctx.send(f":smiling_imp: TurboTemuch1 –∑–∞–ø–µ—Ä {ctx.author.mention} –≤ –ø–æ–¥–≤–∞–ª–µ!")
        elif member.id == ctx.author.id:
            await ctx.send(":x: –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ.")
        else:
            await ctx.send(f":house_abandoned: {ctx.author.mention} –∑–∞–ø–µ—Ä {member.mention} –≤ –ø–æ–¥–≤–∞–ª–µ, –ø—Ä–∏ —ç—Ç–æ–º —Å–∫–∞–∑–∞–≤: {words}")
        
    @command(name="–∏–∑–Ω–∞—Å–∏–ª–æ–≤–∞—Ç—å", aliases=["–Ω–∞—Å–∏–ª–æ–≤–∞—Ç—å","rape", "rapish"], description="–ò–∑–Ω–∞—Å–∏–ª—É–π—Ç–µ –∫–æ–≥–æ-–Ω–∏–±—É–¥—å.")
    @cooldown(1, 20, BucketType.user)
    async def rave_member(self, ctx, member:Member, *, words: Optional[str] = ""):
        """–ò–∑–Ω–∞—Å–∏–ª—É–π—Ç–µ –∫–æ–≥–æ-–Ω–∏–±—É–¥—å."""
        if member.id == 514069435913469962:
            await ctx.send("–Ø –°–ï–ô–ß–ê–° –¢–ï–ë–Ø –°–ê–ú –ò–ó–ù–ê–°–ò–õ–£–Æ –ê –ù–£ –ò–î–ò –°–Æ–î–ê!")
            await asyncio.sleep(2)
            await ctx.send(f":smiling_imp: TurboTemuch1 –∏–∑–Ω–∞—Å–∏–ª–æ–≤–∞–ª {ctx.author.mention}!")
        elif member.id == 793943860044103721:
            await ctx.send("–ê –≤–æ—Ç –∏ –Ω–µ—Ç.")
            await asyncio.sleep(2)
            await ctx.send(f":smiling_imp: TurboTemuch1 –∏–∑–Ω–∞—Å–∏–ª–æ–≤–∞–ª {ctx.author.mention}!")
        elif member.id == ctx.author.id:
            await ctx.send(":x: –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ.")
        else:
            await ctx.send(f":flushed: {ctx.author.mention} –∏–∑–Ω–∞—Å–∏–ª–æ–≤–∞–ª {member.mention}, –ø—Ä–∏ —ç—Ç–æ–º —Å–∫–∞–∑–∞–≤: {words}")    
        
    @command(name="–∏–Ω—Ñ–æ", aliases=["info"], description="–ê–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –±–æ—Ç–∞.")
    @cooldown(1, 10, BucketType.user)
    async def info(self, ctx):
        """–ê–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –±–æ—Ç–∞."""
        
        embed = Embed(title=f"–í–µ—Ä—Å–∏—è: `{ctx.bot.VERSION}`", colour=0x00FF00,
                          timestamp=datetime.utcnow())
        fields = [("Bot created and coded by TurboTemuch#7375", "–í–≤–µ–¥–∏—Ç–µ `/help <–∫–æ–º–∞–Ω–¥–∞>` –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã", True)]
        for name, value, inline in fields:
            embed.add_field(name=name, value=value, inline=inline)
            embed.set_author(name=f"–ë–æ—Ç TurboTemuch1 –æ–Ω–ª–∞–π–Ω!")
            embed.set_footer(text="Branch deployed & GitHub repository connected.")
        await ctx.send(embed=embed)
        
    @command(name="update", description="–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é.")
    @commands.is_owner()
    async def update(self, ctx):
        """–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é."""
        
        await ctx.bot.change_presence(status=discord.Status.idle, activity=discord.Game("–û–ë–ù–û–í–õ–ï–ù–ò–ï"))
        await ctx.message.delete()
                
    @command(name="stable", description="–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")
    @commands.is_owner()
    async def stable(self, ctx):
        """–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è."""
        await ctx.bot.change_presence(status=discord.Status.online, activity=discord.Game(f";help (version {ctx.bot.VERSION})"))
        await ctx.message.delete()
        
    @command(name="—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", aliases=["toggle", "–≤–∫–ª", "maintenance"], description="–í–∫–ª—é—á–µ–Ω–∏–µ –∏–ª–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥.")
    @commands.is_owner()
    async def toggle(self, ctx, *, command):
        """–í–∫–ª—é—á–µ–Ω–∏–µ –∏–ª–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥."""
        command = self.bot.get_command(command)

        if command is None:
            await ctx.send(":x: –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –∫–æ–º–∞–Ω–¥—É —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º.")

        elif ctx.command == command:
            await ctx.send(":x: –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ.")

        else:
            command.enabled = not command.enabled
            status = "–≤–∫–ª—é—á–µ–Ω–∞" if command.enabled else "–≤—ã–∫–ª—é—á–µ–Ω–∞"
            embed = discord.Embed(title="Toggle", description=f"–ö–æ–º–∞–Ω–¥–∞ {command.qualified_name} –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ {status}.", color=ctx.author.color)
            await ctx.send(embed=embed)
            
    @command(name="–±–ª–∏–Ω—ã", aliases=["add", "pancakes", "addbal"], description="–ë—ã—Å—Ç—Ä–∞—è –≤—ã–¥–∞—á–∞ –±–ª–∏–Ω–æ–≤ —É—á–∞—Å—Ç–Ω–∏–∫—É.")
    @commands.has_role("–ú–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω–∫—É—Ä—Å–æ–≤")
    async def addbalance(self, ctx, member:Member, *, amount:int):
        """–ë—ã—Å—Ç—Ä–∞—è –≤—ã–¥–∞—á–∞ –±–ª–∏–Ω–æ–≤ —É—á–∞—Å—Ç–Ω–∏–∫—É."""
        channel = self.bot.get_channel(779412527062843432)
        await channel.send(f"p!addbal {amount} {member.mention}. {ctx.author.mention}, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é.")
	
    @command(name="–∫–∏–∫", aliases=["kick", "–≤—ã–≥–Ω–∞—Ç—å"], description="–ò—Å–∫–ª—é—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞.")
    @commands.has_permissions(kick_members=True)
    async def kickcmd(self, ctx, targets: Member, *, reason: Optional[str]="–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞."):
        """–ò—Å–∫–ª—é—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞."""
        if targets.id == 514069435913469962:
            await ctx.send(":x: –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∫–∏–∫–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        else:
            await targets.kick(reason=reason)
            await ctx.send("–î–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ.")
    
    @kickcmd.error
    async def kick_command_error(self, ctx, exc):
        if isinstance(exc, CheckFailure):
            await ctx.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏.")
        else:
            await ctx.send(":x: –í–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.")
	
    @command(name="–±–∞–Ω", aliases=["ban"], description="–ë–∞–Ω–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
    @commands.has_permissions(ban_members=True)
    async def bancmd(self, ctx, targets: Member, *, reason: Optional[str]="–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞.", time: Optional[int] = 0):
        """–ë–∞–Ω–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        if targets.id == 514069435913469962:
            await ctx.send(":x: –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        else:
            await targets.ban(reason=reason, delete_message_days=time)
            await ctx.send("–î–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ.")
    
    @bancmd.error
    async def ban_command_error(self, ctx, exc):
        if isinstance(exc, CheckFailure):
            await ctx.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏.")
        else:
            await ctx.send(":x: –í–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.")
    

    @Cog.listener()
    async def on_ready(self):
        if not self.bot.ready:
            self.bot.cogs_ready.ready_up("main")

def setup(bot):
    bot.add_cog(Main(bot))
   # bot.scheduler.add_job(...)
