import random
import discord
import asyncio

from discord import *
from typing import Optional
from discord import Message
from discord import Reaction
from discord.ext.commands import has_permissions
from discord.ext import commands
from discord.ext.commands import Cog
from discord.ext.commands import command

def convert(time):
  pos = ["s","m","h","d"]

  time_dict = {"s" : 1, "m" : 60, "h" : 3600, "d": 3600*24}

  unit = time[-1]

  if unit not in pos:
    return -1
  try:
    val = int(time[:-1])
  except:
    return -2

  return val * time_dict[unit]

class Giveaway(Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command(name="giveaway", aliases=["—Ä–∞–∑–¥–∞—á–∞","gw","–∫–æ–Ω–∫—É—Ä—Å","–∫"], description="–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω–∫—É—Ä—Å–∞.")
    @has_permissions(kick_members=True, administrator=True)
    async def giveaway(self, ctx):
      """–ó–∞–ø—É—Å–∫–∞–µ—Ç –Ω–æ–≤—ã–π –∫–æ–Ω–∫—É—Ä—Å."""
      
      await ctx.send("–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω—ë–º!")

      questions = ["–ì–¥–µ –ø—Ä–æ–≤–æ–¥–∏–º —Ä–æ–∑—ã–≥—Ä—ã—à?", "–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∏—Ç–æ–≥–∏? (s|m|h|d)", "–ö–∞–∫–æ–π –ø—Ä–∏–∑?"]

      answers = []

      def check(m):
        return m.author == ctx.author and m.channel == ctx.channel

      for i in questions:
        await ctx.send(i)

        try:
          msg = await self.bot.wait_for('message', timeout=60.0, check=check)
        except asyncio.TimeoutError:
          await ctx.send('–í—ã –æ—Ç–≤–µ—á–∞–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ.')
          return
        else: 
          answers.append(msg.content)

      try:
        c_id = int(answers[0][2:-1])
      except:
        await ctx.send(f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–ø–æ–º—è–Ω—É—Ç –∫–∞–Ω–∞–ª. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ {ctx.channel.mention}.")
        return

      channel = self.bot.get_channel(c_id)

      time = convert(answers[1])
      if time == -1:
        await ctx.send(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω–æ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ (s|m|h|d).")
        return
      elif time == -2:
        await ctx.send(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω–æ –≤—Ä–µ–º—è. –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.")
        return
  
      prize = answers[2]

      await ctx.send(f"–†–æ–∑—ã–≥—Ä—ã—à –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ–¥—ë–Ω –≤ {channel.mention} –∏ –∏—Ç–æ–≥–∏ –±—É–¥—É—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã —á–µ—Ä–µ–∑ {answers[1]}!")

      embed = discord.Embed(title = "–†–û–ó–´–ì–†–´–®!", description = f"{prize}", color = ctx.author.color)

      embed.add_field(name = "–ü—Ä–æ–≤–æ–¥–∏—Ç:", value = ctx.author.mention)

      embed.set_footer(text = f"–ó–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ {answers[1]}!")

      my_msg = await channel.send(embed = embed)

      await my_msg.add_reaction("üéâ")

      await asyncio.sleep(time)

      cache_msg = discord.utils.get(self.bot.cached_messages, id=my_msg.id) #or client.messages depending on your variable
      print(cache_msg.reactions)
      
      users = await cache_msg.reactions[0].users().flatten()
      users.pop(users.index(self.bot.user))

      winner = random.choice(users)

      await channel.send(f"–£ –Ω–∞—Å –µ—Å—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—å! {winner.mention} –≤—ã–∏–≥—Ä–∞–ª: {prize}! *<@&790531068746006548> —Å–∫–æ—Ä–æ –≤—ã–¥–∞—Å—Ç –µ–≥–æ.*")


    @commands.command(name="reroll", aliases=["–ø–µ—Ä–µ—Ä–æ–∑—ã–≥—Ä—ã—à","—Ä–µ—Ä–æ–ª–ª"], description="–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –∫–æ–Ω–∫—É—Ä—Å–∞.")
    @commands.has_permissions(kick_members=True)
    async def reroll(self, ctx, msgid : Optional[int]):
      """–í—ã–±–∏—Ä–∞–µ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –∫–æ–Ω–∫—É—Ä—Å–∞."""
      
      try:
        global new_msg
        new_msg = await ctx.fetch_message(msgid)
      except:
        return await ctx.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–æ–∑—ã–≥—Ä—ã—à–µ–º.")
      users = await new_msg.reactions[0].users().flatten()
      users.pop(users.index(self.bot.user))

      winner = random.choice(users)

      await ctx.send(f"–ù–æ–≤—ã–π –ø–æ–±–µ–¥–∏—Ç–µ–ª—å: {winner.mention}! (–ü–µ—Ä–µ—Ä–æ–∑—ã–≥—Ä—ã—à)")

    @Cog.listener()
    async def on_ready(self):
        if not self.bot.ready:
            self.bot.cogs_ready.ready_up("giveaway")

def setup(bot):
    bot.add_cog(Giveaway(bot))
   # bot.scheduler.add_job(...)
